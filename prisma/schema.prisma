datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  username   String     @unique
  email      String     @unique
  password   String
  bio        String?
  avatarImage      String?
  posts      Post[]
  comments   Comment[]
  likes      Like[]
  followers  Follower[] @relation("UserFollowers")
  following  Follower[] @relation("UserFollowing")
  savedPosts SavedPost[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Post {
  id          Int          @id @default(autoincrement())
  title       String
  content     String
  coverImage  String?
  published   Boolean      @default(false)
  author      User         @relation(fields: [authorId], references: [id])
  authorId    Int
  comments    Comment[]
  likes       Like[]
  categories  Category[]   @relation("PostCategories")
  savedBy     SavedPost[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  likes     Like[]
  createdAt DateTime @default(now())
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[] @relation("PostCategories")
}

model Like {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  post      Post?     @relation(fields: [postId], references: [id])
  postId    Int?
  comment   Comment?  @relation(fields: [commentId], references: [id])
  commentId Int?
  createdAt DateTime  @default(now())
}

model Follower {
  id         Int   @id @default(autoincrement())
  follower   User  @relation("UserFollowers", fields: [followerId], references: [id])
  followerId Int
  following  User  @relation("UserFollowing", fields: [followingId], references: [id])
  followingId Int
  createdAt  DateTime @default(now())
}

model SavedPost {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  post      Post    @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
}